START -> CONTENT
CONTENT -> CONTENT NEWLINE CONTENT | CONTENT NEWLINE | IF_CONTENT | ITERATE_CONTENT | CLASS_CONTENT | DEF_FUNC_CONTENT | ASS_OPERATION | FLOW_CONTENT | IMP_OPERATION | RAI_OP | FUNCTION | METH_CONTENT | PASS | STRING
ITERATE_CONTENT -> FOR_CONTENT | WHILE_CONTENT
FLOW_CONTENT -> CONTINUE_CONTENT | BREAK_CONTENT

IF -> i f
ELIF -> e l i f
ELSE -> e l s e
IF_CONTENT -> IF_HEADER CONTENT | IF_CONTENT ELIF_CONTENT | IF_CONTENT ELSE_CONTENT
IF_HEADER -> IF COND_OPERATION COLON NEWLINE
ELIF_CONTENT -> ELIF_HEADER CONTENT | ELIF_CONTENT ELIF_CONTENT | ELIF_CONTENT ELSE_CONTENT
ELIF_HEADER -> ELIF COND_OPERATION COLON NEWLINE
ELSE_CONTENT -> ELSE_HEADER CONTENT
ELSE_HEADER -> ELSE COLON NEWLINE

FOR -> f o r
IN -> i n
FOR_CONTENT -> FOR_HEADER CONTENT
FOR_HEADER -> FOR SPACE VARIABLE SPACE IN SPACE ITERABLE COLON NEWLINE
ITERABLE -> STRING | LIST | VARIABLE

WHILE -> w h i l e
WHILE_CONTENT -> WHILE_HEADER CONTENT
WHILE_HEADER -> WHILE COND_OPERATION COLON NEWLINE

ITERATE -> FOR_HEADER | FOR_CONTENT | WHILE_HEADER | WHILE_CONTENT

CONTINUE -> c o n t i n u e NEWLINE
CONTINUE_CONTENT -> ITERATE CONTINUE | ITERATE SPACE CONTINUE | ITERATE CONTINUE CONTENT | ITERATE SPACE CONTINUE CONTENT

PASS -> p a s s

BREAK -> b r e a k NEWLINE
BREAK_CONTENT -> ITERATE BREAK | ITERATE SPACE BREAK | ITERATE BREAK CONTENT | ITERATE SPACE BREAK CONTENT

CLASS -> c l a s s
CLASS_CONTENT -> CLASS_HEADER DEF_FUNC_CONTENT
CLASS_HEADER -> CLASS VARIABLE COLON NEWLINE

DEF -> d e f
DEF_FUNC_CONTENT -> DEF_FUNC_HEADER DEF_FUNC_BODY
DEF_FUNC_HEADER -> DEF NAME NRM_BKT_OPN DEF_FUNC_PARAM NRM_BKT_CLS COLON NEWLINE | DEF NAME NRM_BKT_OPN NRM_BKT_CLS COLON NEWLINE
DEF_FUNC_BODY -> DEF_FUNC_BODY NEWLINE DEF_FUNC_BODY | CONTENT | DEF_FUNC_RETURN
DEF_FUNC_RETURN -> RETURN ART_OPERATION | RETURN COND_OPERATION | RETURN
DEF_FUNC_PARAM -> DEF_FUNC_PARAM COMMA DEF_FUNC_PARAM | NAME
RETURN -> r e t u r n

COND_OPERATION -> NRM_BKT_OPN COND_OPERATION NRM_BKT_CLS | COND_OPERAND COND_OPERATOR COND_OPERATION | COND_OPERAND
COND_OPERATOR -> REL_OP | LOG_OP | MEM_OP | IDN_OP
COND_OPERAND -> VARIABLE | CONSTANT | ART_OPERATION | METH_CONTENT | FUNCTION

ASS_OPERATION -> VARIABLE ASS_OPERATOR ASS_OPERAND
ASS_OPERATOR -> ASS_OP
ASS_OPERAND -> NRM_BKT_OPN ASS_OPERAND NRM_BKT_CLS | VARIABLE | CONSTANT | COND_OPERATION | ART_OPERATION | METH_CONTENT | FUNCTION

ART_OPERATION -> NRM_BKT_OPN ART_OPERATION NRM_BKT_CLS | ART_OPERATION ART_OPERATOR ART_OPERATION | ART_OPERAND
ART_OPERATOR -> ART_OP | BIT_OP
ART_OPERAND -> VARIABLE | CONSTANT | COND_OPERATION | METH_CONTENT | FUNCTION

VARIABLE -> NRM_BKT_OPN VARIABLE NRM_BKT_CLS | VAR_CTN
VAR_CTN -> VAR_CTN VAR_CTN | v a r | v a r [ VAR_IDX ]
VAR_IDX -> VARIABLE | CONSTANT

NAME -> v a r

CONSTANT -> NRM_BKT_OPN CONSTANT NRM_BKT_CLS | CON_CTN
CON_CTN -> CON_CTN CON_CTN | DIGITS | TRUE | FALSE

FUNCTION -> VARIABLE NRM_BKT_OPN FUNCTION_PARAM NRM_BKT_CLS | VARIABLE NRM_BKT_OPN NRM_BKT_CLS
FUNCTION_PARAM -> FUNCTION_PARAM COMMA FUNCTION_PARAM | VARIABLE | CONSTANT

METH_CONTENT -> VARIABLE DOT METH_BCK
METH_BCK -> VARIABLE DOT METH_BCK | NAME NRM_BKT_OPN METH_PARAM NRM_BKT_CLS | NAME NRM_BKT_OPN NRM_BKT_CLS
METH_PARAM -> METH_PARAM COMMA METH_PARAM | VARIABLE | CONSTANT

STRING -> QUOTE STRING_CONTENT QUOTE | QQUOTE STRING_CONTENT QQUOTE | QUOTE QUOTE | QQUOTE QQUOTE | m s t r
STRING_CONTENT -> PRINTABLE | STRING_CONTENT PRINTABLE

LIST -> SQR_BKT_OPN LIST_CONTENT SQR_BKT_CLS
LIST_TYPE -> VARIABLE | CONSTANT | STRING
LIST_CONTENT -> LIST_TYPE | LIST_CONTENT COMMA LIST_TYPE

IMP_OPERATION -> FROM IMP_CONTENT IMPORT IMPT_MOD | IMPORT IMP_CONTENT | IMPORT AS_BLOCK
AS_BLOCK -> AS_BLOCK COMMA AS_BLOCK | IMP_CONTENT AS NAME
IMP_CONTENT -> IMP_CONTENT DOT IMP_CONTENT | NAME
IMPT_MOD -> NAME | ALL | AS_BLOCK
ALL -> *
AS -> a s
IMPORT -> i m p o r t
FROM -> f r o m

RAI_OP -> RAISE RAI_FUNC
RAI_FUNC -> VARIABLE NRM_BKT_OPN GOGO VARIABLE GOGO NRM_BKT_CLS
GOGO -> "
RAISE -> r a i s e

QUOTE -> '
QQUOTE -> "
COLON -> :
COMMA -> ,
DOT -> .
NEWLINE -> NEWLINE NEWLINE | __new_line__
SPACE -> SPACE SPACE | __space__
OR_SYM -> __or_sym__
REL_OP -> = = | ! = | < = | > = | < | >
ASS_OP -> = | + = | - = | * = | * * = | / = | / / = | % =
ART_OP -> + | - | * | * * | / | / / | %
LOG_OP -> a n d | o r | n o t
MEM_OP -> i n | n o t SPACE i n
IDN_OP -> i s | i s SPACE n o t
BIT_OP -> & | OR_SYM | ^ | > > | < < | ~
TRUE -> T r u e
FALSE -> F a l s e
NONE -> N o n e
SQR_BKT -> [ | ]
SQR_BKT_OPN -> [
SQR_BKT_CLS -> ]
CRL_BKT -> { | }
CRL_BKT_OPN -> {
CRL_BKT_CLS -> }
NRM_BKT -> ( | )
NRM_BKT_OPN -> (
NRM_BKT_CLS -> )
DIGITS -> 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0
CHARS_UP -> A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
CHARS_LOW -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z
OTHER_CHAR -> ! | # | $ | % | & | \ \ | . | ` | ~ | @ | ? | OR_SYM | _ | \ n | \ r | \ x
PRINTABLE -> DIGITS | CHARS_UP | CHARS_LOW | SQR_BKT | CRL_BKT | NRM_BKT | SPACE | OTHER_CHAR
UNDERSCORE -> _
