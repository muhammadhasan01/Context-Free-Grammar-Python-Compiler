START -> CONTENT
CONTENT -> CONTENT NEWLINE CONTENT | CONTENT NEWLINE | IF_CONTENT | ITERATE_CONTENT | CLASS_CONTENT | DEF_FUNC_CONTENT | ASS_OPERATION | FLOW_CONTENT | IMP_OPERATION | RAI_OP | FUNCTION | METH_CONTENT | PASS | STRING
ITERATE_CONTENT -> FOR_CONTENT | WHILE_CONTENT
FLOW_CONTENT -> CONTINUE_CONTENT | BREAK_CONTENT

IF -> a
ELIF -> b
ELSE -> c
IF_CONTENT -> IF_HEADER CONTENT | IF_CONTENT ELIF_CONTENT | IF_CONTENT ELSE_CONTENT
IF_HEADER -> IF COND_OPERATION COLON NEWLINE
ELIF_CONTENT -> ELIF_HEADER CONTENT | ELIF_CONTENT ELIF_CONTENT | ELIF_CONTENT ELSE_CONTENT
ELIF_HEADER -> ELIF COND_OPERATION COLON NEWLINE
ELSE_CONTENT -> ELSE_HEADER CONTENT
ELSE_HEADER -> ELSE COLON NEWLINE

FOR -> d
IN -> e
FOR_CONTENT -> FOR_HEADER CONTENT
FOR_HEADER -> FOR VARIABLE IN ITERABLE COLON NEWLINE
ITERABLE -> STRING | LIST | VARIABLE | FUNCTION | METH_CONTENT

WHILE -> f
WHILE_CONTENT -> WHILE_HEADER CONTENT
WHILE_HEADER -> WHILE COND_OPERATION COLON NEWLINE

ITERATE -> FOR_HEADER | FOR_CONTENT | WHILE_HEADER | WHILE_CONTENT

CONTINUE -> g NEWLINE
CONTINUE_CONTENT -> ITERATE CONTINUE | ITERATE SPACE CONTINUE | ITERATE CONTINUE CONTENT | ITERATE SPACE CONTINUE CONTENT

PASS -> h

BREAK -> i NEWLINE
BREAK_CONTENT -> ITERATE BREAK | ITERATE SPACE BREAK | ITERATE BREAK CONTENT | ITERATE SPACE BREAK CONTENT

CLASS -> j
CLASS_CONTENT -> CLASS_HEADER CLASS_BODY
CLASS_HEADER -> CLASS VARIABLE COLON NEWLINE
CLASS_BODY -> CLASS_BODY NEWLINE CLASS_BODY | CLASS_BODY NEWLINE | IF_CONTENT | ITERATE_CONTENT | CLASS_CONTENT | DEF_FUNC_CONTENT | ASS_OPERATION | FLOW_CONTENT | IMP_OPERATION | FUNCTION | METH_CONTENT | PASS | STRING

// Function
DEF -> k
DEF_FUNC_CONTENT -> DEF_FUNC_HEADER DEF_FUNC_BODY
DEF_FUNC_HEADER -> DEF NAME NRM_BKT_OPN DEF_FUNC_PARAM NRM_BKT_CLS COLON NEWLINE | DEF NAME NRM_BKT_OPN NRM_BKT_CLS COLON NEWLINE
DEF_FUNC_BODY -> DEF_FUNC_BODY NEWLINE DEF_FUNC_BODY | CONTENT_FUNC
DEF_FUNC_RETURN -> RETURN ART_OPERATION | RETURN COND_OPERATION | RETURN METH_CONTENT | RETURN FUNCTION | RETURN
DEF_FUNC_PARAM -> DEF_FUNC_PARAM COMMA DEF_FUNC_PARAM | NAME
RETURN -> l

CONTENT_FUNC -> CONTENT_FUNC NEWLINE CONTENT_FUNC | CONTENT_FUNC NEWLINE | IF_CONTENT_FUNC | ITERATE_CONTENT | CLASS_CONTENT | DEF_FUNC_CONTENT | ASS_OPERATION | FLOW_CONTENT | IMP_OPERATION | RAI_OP | FUNCTION | METH_CONTENT | PASS | STRING | DEF_FUNC_RETURN

IF_CONTENT_FUNC -> IF_HEADER CONTENT_FUNC | IF_CONTENT_FUNC ELIF_CONTENT_FUNC | IF_CONTENT_FUNC ELSE_CONTENT_FUNC
ELIF_CONTENT_FUNC -> ELIF_HEADER CONTENT_FUNC | ELIF_CONTENT_FUNC ELIF_CONTENT_FUNC | ELIF_CONTENT_FUNC ELSE_CONTENT_FUNC
ELSE_CONTENT_FUNC -> ELSE_HEADER CONTENT_FUNC
// Function end

COND_OPERATION -> NRM_BKT_OPN COND_OPERATION NRM_BKT_CLS | COND_OPERAND COND_OPERATOR COND_OPERATION | COND_OPERAND
COND_OPERATOR -> REL_OP | LOG_OP | MEM_OP | IDN_OP
COND_OPERAND -> VARIABLE | CONSTANT | ART_OPERATION | METH_CONTENT | FUNCTION | LIST | STRING

ASS_OPERATION -> VARIABLE ASS_OPERATOR ASS_OPERAND
ASS_OPERATOR -> ASS_OP
ASS_OPERAND -> NRM_BKT_OPN ASS_OPERAND NRM_BKT_CLS | VARIABLE | CONSTANT | COND_OPERATION | ART_OPERATION | METH_CONTENT | FUNCTION | LIST | STRING

ART_OPERATION -> NRM_BKT_OPN ART_OPERATION NRM_BKT_CLS | ART_OPERATION ART_OPERATOR ART_OPERATION | ART_OPERAND
ART_OPERATOR -> ART_OP | BIT_OP
ART_OPERAND -> VARIABLE | CONSTANT | COND_OPERATION | METH_CONTENT | FUNCTION

VARIABLE -> NRM_BKT_OPN VARIABLE NRM_BKT_CLS | VAR_CTN
VAR_CTN -> VAR_CTN VAR_CTN | x | x [ VAR_IDX ]
VAR_IDX -> VARIABLE | CONSTANT | STRING | ART_OPERATOR | ART_OPERATION

NAME -> x

NUMBER -> y
CONSTANT -> NRM_BKT_OPN CONSTANT NRM_BKT_CLS | CON_CTN
CON_CTN -> CON_CTN CON_CTN | TRUE | FALSE | NUMBER

FUNCTION -> VARIABLE NRM_BKT_OPN FUNCTION_PARAM NRM_BKT_CLS | VARIABLE NRM_BKT_OPN NRM_BKT_CLS
FUNCTION_PARAM -> FUNCTION_PARAM COMMA FUNCTION_PARAM | VARIABLE | CONSTANT | STRING

METH_CONTENT -> VARIABLE DOT METH_BCK
METH_BCK -> VARIABLE DOT METH_BCK | NAME NRM_BKT_OPN METH_PARAM NRM_BKT_CLS | NAME NRM_BKT_OPN NRM_BKT_CLS | NAME
METH_PARAM -> METH_PARAM COMMA METH_PARAM | VARIABLE | CONSTANT

STRING -> z

LIST -> SQR_BKT_OPN LIST_CONTENT SQR_BKT_CLS
LIST_TYPE -> VARIABLE | CONSTANT | STRING | FUNCTION | METH_CONTENT
LIST_CONTENT -> LIST_TYPE | LIST_CONTENT COMMA LIST_TYPE | LIST_TYPE FOR VARIABLE IN FUNCTION

IMP_OPERATION -> FROM IMP_CONTENT IMPORT IMPT_MOD | IMPORT IMP_CONTENT | IMPORT AS_BLOCK
AS_BLOCK -> AS_BLOCK COMMA AS_BLOCK | IMP_CONTENT AS NAME
IMP_CONTENT -> IMP_CONTENT DOT IMP_CONTENT | NAME
IMPT_MOD -> NAME | ALL | AS_BLOCK
ALL -> *
AS -> m
IMPORT -> n
FROM -> o

RAI_OP -> RAISE RAI_FUNC
RAI_FUNC -> VARIABLE NRM_BKT_OPN GOGO VARIABLE GOGO NRM_BKT_CLS
GOGO -> "
RAISE -> p

AND -> q
OR -> r
NOT -> s
IS -> t

QUOTE -> '
QQUOTE -> "
COLON -> :
COMMA -> ,
DOT -> .
NEWLINE -> NEWLINE NEWLINE | __new_line__
SPACE -> SPACE SPACE | __space__
OR_SYM -> __or_sym__
REL_OP -> = = | ! = | < = | > = | < | >
ASS_OP -> = | + = | - = | * = | * * = | / = | / / = | % =
ART_OP -> + | - | * | * * | / | / / | %
LOG_OP -> AND | OR | NOT
MEM_OP -> IN | NOT SPACE IN
IDN_OP -> IS | IS SPACE NOT
BIT_OP -> & | OR_SYM | ^ | > > | < < | ~
TRUE -> u
FALSE -> v
NONE -> w
SQR_BKT -> [ | ]
SQR_BKT_OPN -> [
SQR_BKT_CLS -> ]
CRL_BKT -> { | }
CRL_BKT_OPN -> {
CRL_BKT_CLS -> }
NRM_BKT -> ( | )
NRM_BKT_OPN -> (
NRM_BKT_CLS -> )
