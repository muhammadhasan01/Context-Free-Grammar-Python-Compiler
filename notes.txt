'''
Returns index of x in arr if present, else -1
'''

def binarySearch (arr, l, r, x):
    # Check base case
    if r >= l:
        mid = l + (r - l)/2
        if arr[mid] == x:
            return mid
        elif arr[mid] > x:
            return binarySearch(arr, l, mid-1, x)
        # Else the element can only be present in right subarray
        else:
            return binarySearch(arr, mid++1, r, x)
    else:
        '''
        # Element is not present in the array
        '''
        return -1


====

from PIL import Image
import pytesseract
import time
import keyboard
import random

IMAGE_INPUT_NAME = 'input.jpg'
FILE_OUTPUT_NAME = 'result.txt'
ACCEPTED_ASCII_LIST = []
for x in range(32, 127):
    ACCEPTED_ASCII_LIST.append(x)

def extract_text_from_image():
    PIPE_ASCII = 124

    time_start = time.perf_counter()
    text = pytesseract.image_to_string(Image.open(IMAGE_INPUT_NAME))
    with open(FILE_OUTPUT_NAME, 'w') as f_out:
        for c in text:
            ascii = ord(c)
            if ascii == PIPE_ASCII:
                f_out.write('I')
            elif ascii in ACCEPTED_ASCII_LIST:
                f_out.write(c)
            else:
                f_out.write(' ')
    time_end = time.perf_counter()


====

from PIL import Image

var = "input.jpg"
ACCEPTED_ASCII_LIST = []

def extract_text_from_image():
    PIPE_ASCII = 124

    time_start = time.perf_counter()
    text = pytesseract.image_to_string(Image.open(IMAGE_INPUT_NAME))
    with open(FILE_OUTPUT_NAME, 'asdf') as f_out:
        for c in text:
            ascii = ord(c)
            if ascii == PIPE_ASCII:
                f_out.write('I')
            elif ascii in ACCEPTED_ASCII_LIST:
                f_out.write[c]
            else:
                f_out.write(' ')
    time_end = time.perf_counter()


====

class Bola(object):
    """docstring for Bola."""

    def __init__(self, arg):
        super(Bola, self).__init__()
        self.arg = arg

    def err(self, hehe):
        raise Exception

    return None
